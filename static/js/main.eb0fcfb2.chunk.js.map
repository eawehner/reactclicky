{"version":3,"sources":["components/Card/index.js","components/Nav/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","img","id","clicked","onClick","clickEvent","alt","name","key","Nav","score","highScore","App","state","CardList","shuffled","array","i","j","temp","length","Math","floor","random","console","log","gameOver","_this","forEach","card","setState","event","preventDefault","currentID","target","tempArray","slice","_this2","this","components_Nav","map","components_Card","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"onCAiBeA,MAZf,SAAcC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,IAAKC,GAAIP,EAAMO,GAAIC,QAASR,EAAMQ,QAASC,QAAST,EAAMU,WAAYC,IAAKX,EAAMY,KAAMC,IAAKb,QCUjHc,MAjBf,SAAad,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDAEXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,iBAKAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAkBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWG,GAAG,SAA9B,UAA8CP,EAAMe,QACpFd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAkBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWG,GAAG,aAA9B,eAAuDP,EAAMgB,eCsF9FC,6MA3FbC,MAAQ,CACNC,WACAJ,MAAO,EACPC,UAAW,KAKbI,SAAW,SAACC,GACV,IAAIC,EAAGC,EAAGC,EAEV,IAAKF,EAAID,EAAMI,OAAS,EAAGH,EAAI,EAAGA,IAChCC,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IACpCE,EAAOH,EAAMC,GACbD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKC,EAMb,OAHAK,QAAQC,IAAI,cACZD,QAAQC,IAAIT,GAELA,KAMTU,SAAW,WACTF,QAAQC,IAAI,aAGZE,EAAKd,MAAMC,SAASc,QAAQ,SAAAC,GAC1BA,EAAK1B,QAAQ,IAIfwB,EAAKG,SAAS,CAACpB,MAAO,EAAGI,SAAUa,EAAKZ,SAASD,QAOnDT,WAAa,SAAC0B,GACZA,EAAMC,iBAGN,IAAIC,EAAYF,EAAMG,OAAOhC,GAE7B,GAAKyB,EAAKd,MAAMC,SAASmB,GAAW9B,QAU9BwB,EAAKd,MAAMH,OAASiB,EAAKd,MAAMF,WACjCgB,EAAKG,SAAS,CAACnB,UAAWgB,EAAKd,MAAMH,QAGvCiB,EAAKD,eAdsC,CAE3C,IAAIS,EAAYR,EAAKd,MAAMC,SAASsB,QACpCZ,QAAQC,IAAIU,GACZA,EAAUF,GAAW9B,QAAU,EAE/BwB,EAAKG,SAAS,CAACpB,MAAOiB,EAAKd,MAAMH,MAAQ,EAAGI,SAAUa,EAAKZ,SAASoB,+EAa/D,IAAAE,EAAAC,KACP,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACyC,EAAD,CACE7B,MAAS4B,KAAKzB,MAAMH,MACpBC,UAAa2B,KAAKzB,MAAMF,YAE1Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZuC,KAAKzB,MAAMC,SAAS0B,IAAI,SAACX,EAAMZ,GAAP,OACvBrB,EAAAC,EAAAC,cAAC2C,EAAD,CACEjC,IAAOqB,EAAK3B,GACZA,GAAMe,EACNhB,IAAO4B,EAAK5B,IACZE,QAAW0B,EAAK1B,QAChBE,WAAcgC,EAAKhC,wBArFbqC,aCDlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eb0fcfb2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\n//setting up our card html for each card, using props.img to pull in the image\r\n//and setting up an id through props.id for our key and also using it to track the individual clicked value of each card\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"col-sm-4\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <img src={props.img} id={props.id} clicked={props.clicked} onClick={props.clickEvent} alt={props.name} key={props} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\n//this is where front-end code for the navbar will be written to be exported as a component\r\nfunction Nav(props) {\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            {/* code for the initial header would go here, just a simple header formated through bootstrap */}\r\n            <span className=\"navbar-brand\">FFXIV-Clicky!</span>\r\n\r\n            {/* code for the score tracker would go here;\r\n                    the score would add +1 to the state through this.state.score\r\n                    the score would be displayed   */}\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\"><span className=\"nav-link\" id=\"score\">Score: {props.score}</span></li>\r\n                <li className=\"nav-item active\"><span className=\"nav-link\" id=\"highScore\">High Score: {props.highScore}</span></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from \"./cards.json\";\nimport Card from \"./components/Card\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n\n  //the state where we will track our cards, score and high score\n  state = {\n    CardList,\n    score: 0,\n    highScore: 0\n  }\n\n  //shuffled array code from: https://www.jstips.co/en/javascript/shuffle-an-array/\n  //it loops through the array and shuffles each object within it\n  shuffled = (array) => {\n    var i, j, temp;\n\n    for (i = array.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    console.log(\"Shuffled: \")\n    console.log(array);\n\n    return array;\n  }\n\n  // GAME LOGIC GOES HERE\n\n  //game fail state\n  gameOver = () => {\n    console.log(\"Game over\");\n\n    //resetting the 'clicked' property to false for new game, since nothing has been clicked for it!\n    this.state.CardList.forEach(card => {\n      card.clicked=0;\n    })\n\n    //resetting the score to zero\n    this.setState({score: 0, CardList: this.shuffled(CardList)});\n\n    //and starting again\n    return;\n  }\n\n\n  clickEvent = (event) => {\n    event.preventDefault();\n\n    //pulling the current ID from the clicked card\n    let currentID = event.target.id;\n\n    if (!this.state.CardList[currentID].clicked) {\n\n      let tempArray = this.state.CardList.slice();\n      console.log(tempArray);\n      tempArray[currentID].clicked = 1;\n\n      this.setState({score: this.state.score + 1, CardList: this.shuffled(tempArray)});\n    \n    } else {\n\n      if (this.state.score >= this.state.highScore) {\n        this.setState({highScore: this.state.score});\n      }\n\n      this.gameOver();\n    }\n  }\n\n  //in our render, we are creating and setting a card for each card in our json file\n  render() {\n    return (\n      <div className=\"container\">\n      <Nav \n        score = {this.state.score}\n        highScore = {this.state.highScore}\n      />\n      <div className=\"row\">\n        {this.state.CardList.map((card, i) => (\n          <Card \n            key = {card.id}\n            id = {i}\n            img = {card.img}\n            clicked = {card.clicked}\n            clickEvent = {this.clickEvent}\n          />\n        ))}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}